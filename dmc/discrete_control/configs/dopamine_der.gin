# Data Efficient Rainbow (DER) based on Dopamine Rainbow params
import dopamine.jax.agents.dqn.dqn_agent
import dopamine.jax.networks
import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.replay_memory.prioritized_replay_buffer
import atari_100k_precipice.networks
import atari_100k_precipice.agents.rainbow_agent

JaxDQNAgent.gamma = 0.99
# Use 10 instead of 20 as done by SPR paper
JaxDQNAgent.update_horizon = 10    # DER (instead of 3)
JaxDQNAgent.min_replay_history = 1600    # DER (instead of 20000)
JaxDQNAgent.update_period = 1    # DER: Update every 1 step (rather than 4)
JaxDQNAgent.target_update_period = 8000    # agent steps
JaxDQNAgent.epsilon_train = 0.01
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 2000    # agent steps
JaxDQNAgent.optimizer = 'adam'

# Don't use noisy networks, dueling DQN, and double DQN.
JaxFullRainbowAgent.noisy = False
JaxFullRainbowAgent.dueling = False
JaxFullRainbowAgent.double_dqn = False
JaxFullRainbowAgent.num_atoms = 51
JaxFullRainbowAgent.vmax = 10.
JaxFullRainbowAgent.replay_scheme = 'prioritized'
JaxFullRainbowAgent.network    = @atari_100k_precipice.networks.RainbowDQNNetwork
JaxFullRainbowAgent.epsilon_fn = @jax.agents.dqn.dqn_agent.linearly_decaying_epsilon

# Note these parameters are from DER (van Hasselt et al, 2019)
create_optimizer.learning_rate = 0.0001
create_optimizer.eps = 0.00015

atari_lib.create_atari_environment.game_name = 'Pong'
# Atari 100K benchmark doesn't use sticky actions.
atari_lib.create_atari_environment.sticky_actions = False
AtariPreprocessing.terminal_on_life_loss = True
Runner.num_iterations = 1
Runner.training_steps = 100000    # agent steps
MaxEpisodeEvalRunner.num_eval_episodes = 100    # agent episodes
Runner.max_steps_per_episode = 27000    # agent steps

DeterministicOutOfGraphPrioritizedReplayBuffer.replay_capacity = 1000000
DeterministicOutOfGraphPrioritizedReplayBuffer.batch_size = 32
OutOfGraphPrioritizedReplayBuffer.replay_capacity = 10000000 # 10M as a proxy for unbounded memory
OutOfGraphPrioritizedReplayBuffer.batch_size = 32
