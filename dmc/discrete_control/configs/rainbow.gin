import dopamine.jax.agents.dqn.dqn_agent
import dopamine.jax.networks
import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.replay_memory.prioritized_replay_buffer
import atari_100k_precipice.networks
import atari_100k_precipice.agents.rainbow_agent

JaxDQNAgent.gamma = 0.99
JaxDQNAgent.update_horizon = 3
JaxDQNAgent.min_replay_history = 20000    # agent steps
JaxDQNAgent.update_period = 4
JaxDQNAgent.target_update_period = 8000    # agent steps
JaxDQNAgent.epsilon_train = 0.01
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 250000    # agent steps
JaxDQNAgent.optimizer = 'adam'

JaxFullRainbowAgent.noisy = True
JaxFullRainbowAgent.dueling = True
JaxFullRainbowAgent.double_dqn = True
JaxFullRainbowAgent.num_atoms = 51
JaxFullRainbowAgent.vmax = 10.
JaxFullRainbowAgent.replay_scheme = 'prioritized'
JaxFullRainbowAgent.network    = @atari_100k_precipice.networks.RainbowDQNNetwork
JaxFullRainbowAgent.epsilon_fn = @jax.agents.dqn.dqn_agent.linearly_decaying_epsilon

# Note these parameters are different from C51's.
create_optimizer.learning_rate = 0.0000625
create_optimizer.eps = 0.00015

atari_lib.create_atari_environment.game_name = 'Pong'
# Sticky actions with probability 0.25, as suggested by (Machado et al., 2017).
atari_lib.create_atari_environment.sticky_actions = True
Runner.num_iterations = 200
Runner.training_steps = 250000    # agent steps
Runner.evaluation_steps = 125000    # agent steps
Runner.max_steps_per_episode = 27000    # agent steps

DeterministicOutOfGraphPrioritizedReplayBuffer.replay_capacity = 1000000
DeterministicOutOfGraphPrioritizedReplayBuffer.batch_size = 32
OutOfGraphPrioritizedReplayBuffer.replay_capacity = 1000000
OutOfGraphPrioritizedReplayBuffer.batch_size = 32
